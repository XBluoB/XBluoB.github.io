<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>菠萝菠萝&amp;博客</title>
  
  <subtitle>生活明朗，万物可爱🌼</subtitle>
  <link href="https://www.yyxblog.world/atom.xml" rel="self"/>
  
  <link href="https://www.yyxblog.world/"/>
  <updated>2023-08-04T16:44:17.492Z</updated>
  <id>https://www.yyxblog.world/</id>
  
  <author>
    <name>菠萝菠萝</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>科学上网</title>
    <link href="https://www.yyxblog.world/2023/08/04/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    <id>https://www.yyxblog.world/2023/08/04/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/</id>
    <published>2023-08-04T15:02:22.000Z</published>
    <updated>2023-08-04T16:44:17.492Z</updated>
    
    <content type="html"><![CDATA[<h1 id="为什么要科学的上网"><a href="#为什么要科学的上网" class="headerlink" title="为什么要科学的上网"></a>为什么要科学的上网</h1><h2 id="科学上网也叫做翻”墙“"><a href="#科学上网也叫做翻”墙“" class="headerlink" title="科学上网也叫做翻”墙“"></a>科学上网也叫做翻”墙“</h2><p>这里的”墙“指的是国家公共网络监控系统”-GFW（The Great Fire Wall of China），称作中国国家防火墙，科学上网就是通过VPN——虚拟专用网络突破突破IP封锁，内容过滤，域名劫持，流量限制等，非法访问被国家禁止的境外网站行为，用来科学上网的工具也被形象的称为梯子。</p><p>科学上网违法吗？肯定是违法的，绕开我国的法律管制浏览境外服务器相关网页内容的行为都属于违法行为！但是出于学习的目的还是进行一下科学上网的一个学习。</p><h2 id="科学上网可以做什么"><a href="#科学上网可以做什么" class="headerlink" title="科学上网可以做什么"></a>科学上网可以做什么</h2><p>大家平时在学习一些专业软件的官方文档，或是查找一些资料的时候，是否会遇到网站禁止访问的问题呢，那是因为这个网站被GFW禁止访问啦，那么这时候我们想要继续学习，那么就只能借助科学上网的工具，才能继续访问了。</p><h2 id="什么工具可以科学上网"><a href="#什么工具可以科学上网" class="headerlink" title="什么工具可以科学上网"></a>什么工具可以科学上网</h2><p>我所了解的科学上网工具有两个ShdowsocksR&#x2F;SSR客户端，V2Ray客户端这两个软件。</p><h3 id="ShdowsocksR-SSR客户端"><a href="#ShdowsocksR-SSR客户端" class="headerlink" title="ShdowsocksR&#x2F;SSR客户端"></a>ShdowsocksR&#x2F;SSR客户端</h3><p>ShdowsocksR也被叫做SSR，小飞机，纸飞机等，但如今GFW的识别能力越来越强，使用SSR进行科学上网,流量稍微过大，就及其容易被封锁ip，本人刚开始学习科学上网的时候，SSR就被秒封了，所以不推荐。</p><h3 id="V2Ray客户端"><a href="#V2Ray客户端" class="headerlink" title="V2Ray客户端"></a>V2Ray客户端</h3><p>V2Ray因为新的协议，面对对GFW的躲藏能力强，所以是我比较推荐的科学上网的工具，V2Ray的官网是</p><p><a href="https://v2ray.com/">https://v2ray.com</a>  ，这个网站国内无法正常打开，可以通过github下载 <a href="https://github.com/2dust/v2rayN">https://github.com/2dust/v2rayN</a> 。</p><h2 id="V2Ray的使用"><a href="#V2Ray的使用" class="headerlink" title="V2Ray的使用"></a>V2Ray的使用</h2><p>下载了客户端不是可以直接进行科学上网的，还需要进行一些配置才可以。</p><h3 id="配置服务端信息"><a href="#配置服务端信息" class="headerlink" title="配置服务端信息"></a>配置服务端信息</h3><p>需要对客户端配置上服务端的信息后才能使用，那么服务端信息从哪里来呢，这里我们有两种选择。</p><h4 id="购买别人搭建好的服务端信息"><a href="#购买别人搭建好的服务端信息" class="headerlink" title="购买别人搭建好的服务端信息"></a>购买别人搭建好的服务端信息</h4><p>别人搭建好的服务端俗称机场，购买后通常会有该服务端的url，我们只需要复制该url再通过V2Ray导入就可以开始使用了，这里我举一个例子。</p><p>这里是我经常使用的一个机场的例子</p><p><img src="/images/v2ray1.png" alt="1"></p><p>选择一键订阅</p><p><img src="/images/v2ray2.png" alt="2"></p><p>选择复制订阅地址就是所谓的url，扫描二维码订阅也可以，然后我们启动V2Ray，在右下角的小图标中点击V2Ray的蓝色小图标，根据你选择导入订阅的方式选择从剪切板上导入url或者扫描屏幕上的二维码。</p><p><img src="/images/v2ray3.png" alt="3"></p><p>导入成功之后就可以看到我们的服务器了，选择刚才导入的服务器，路由我们选择绕过大陆模式，最后点击自动配置系统代理，然后就可以成功科学上网了，现在打开随便一个你平时打不开的网站看看。</p><h4 id="自行购买VPS搭建服务端"><a href="#自行购买VPS搭建服务端" class="headerlink" title="自行购买VPS搭建服务端"></a>自行购买VPS搭建服务端</h4><p>自行搭建服务端，需要用到一台境外的VPS和一些基础的Linux操作，之后会出一篇博客细讲，搭建完毕之后就和前面讲的一样导入服务器信息，就可以科学上网了。</p><h2 id="科学上网机场指南"><a href="#科学上网机场指南" class="headerlink" title="科学上网机场指南"></a>科学上网机场指南</h2><table><thead><tr><th align="left">科学上网机场指南</th></tr></thead><tbody><tr><td align="left">【<a href="https://v3ssy.xyz/#/register?code=C5D297oX">宝贝云</a>】稳定ChatGPT ，五年老厂，先试后付，精品线路，超低价格，追求极致性价比，奈非、迪士尼等流媒体全解锁。</td></tr><tr><td align="left">【<a href="https://v4speed.xyz/#/register?code=3diJ6DOf">V4SPEED</a>】-IPLC全专线鸡场，全1.0x倍率，免费试用，实力验证！敏感期高墙无影响，支持游戏加速，网页加速，解锁流媒体(奈飞，HBO,HULU等)，24小时在线服务。</td></tr><tr><td align="left">【<a href="https://fl20230805.fastlink.la/auth/register">FASTLINK</a>】 - 免费试用所有节点，实力验证，超级稳定，IPLC，Anycast ，中转技术应有尽有。不限设备数，解锁Netflix、Hulu、HBO、动画疯、TVB等流媒体，可定制独享专线。</td></tr><tr><td align="left">【<a href="https://billing.stardream.cloud/#/login">星梦</a>】- 不定时开启3元超值套餐 含iepl专线节点。</td></tr><tr><td align="left">【<a href="https://yaofan.cc/runaway/">跑路云</a>】- 6元起 含专线机场与0.1倍率日常节点。</td></tr><tr><td align="left">【<a href="https://user1.earthtor.com/#/register?code=QQzrc8lQ">地球之门-Earth Tor</a>】全顶级中国入口，质量非常高的土豪线路,香港、台湾、马来、日本、乌克兰、欧美、迪拜等中东国家原生ip线路,支持Tiktok.适合做海外营销的个人和团队</td></tr><tr><td align="left">【<a href="https://cute-ekbkggb9hdbpheb9.z01.azurefd.net/#/register">CuteCloud(最萌の云)</a>】无需邮箱验证，稳定老牌机场，免费试用。提供全平台客户端，简单易用。解锁各种访问限制，全线支持ChatGPT以及流媒体解锁。速度和稳定性极佳，Youtube全天可8K。有低倍率节点&#x2F;负载均衡等等~</td></tr><tr><td align="left">【<a href="https://www.sgkpx.com/auth/register?code=v2rayn">拓扑门</a>】实力后盾免费！提供永久免费节点！免费试用1月★金牌6年海外团队。铂金IEPL专线流媒体全解锁支持chatgpt。送奈飞&#x2F;HBO&#x2F;IPTV账号。4K秒开。真实价格无套路。</td></tr></tbody></table><p><a href="https://9.234456.xyz/abc.html?t=638267911660484764">更多的机场推荐可以点击查看&gt;&gt;&gt;</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;为什么要科学的上网&quot;&gt;&lt;a href=&quot;#为什么要科学的上网&quot; class=&quot;headerlink&quot; title=&quot;为什么要科学的上网&quot;&gt;&lt;/a&gt;为什么要科学的上网&lt;/h1&gt;&lt;h2 id=&quot;科学上网也叫做翻”墙“&quot;&gt;&lt;a href=&quot;#科学上网也叫做翻”墙“&quot; c</summary>
      
    
    
    
    <category term="科学上网" scheme="https://www.yyxblog.world/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
    
    <category term="科学上网" scheme="https://www.yyxblog.world/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot项目实现登录注册</title>
    <link href="https://www.yyxblog.world/2023/07/28/SpringBoot%E9%A1%B9%E7%9B%AE%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%95%E6%B3%A8%E5%86%8C/"/>
    <id>https://www.yyxblog.world/2023/07/28/SpringBoot%E9%A1%B9%E7%9B%AE%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%95%E6%B3%A8%E5%86%8C/</id>
    <published>2023-07-28T11:41:13.000Z</published>
    <updated>2023-08-03T11:35:33.953Z</updated>
    
    <content type="html"><![CDATA[<h2 id="首先学习怎么在SpingBoot官网或idea中快速生成一个SpringBoot的项目模板，制作第一个SpringBoot项目。"><a href="#首先学习怎么在SpingBoot官网或idea中快速生成一个SpringBoot的项目模板，制作第一个SpringBoot项目。" class="headerlink" title="首先学习怎么在SpingBoot官网或idea中快速生成一个SpringBoot的项目模板，制作第一个SpringBoot项目。"></a>首先学习怎么在<a href="https://start.spring.io/">SpingBoot官网</a>或idea中快速生成一个SpringBoot的项目模板，制作第一个SpringBoot项目。</h2><p><img src="/images/springboot%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%951.png" alt="图片1"></p><p>​构建工具选择Maven，开发语言选择Java，版本选择稳定版本2.7.14，中间的Project Metadate可以修改项目的基本信息，然后最后的Java版本选8，Dependencies可以添加项目所需要的依赖，也可以等项目创建完毕之后到pom.xml这个文件中手动的添加依赖。自己在学习的时候发现稳定版本3.1.2在启动的时候会报错会Java版本有问题，更改了idea的jdk版本和项目的java版本依旧会报错，所以我还是选择了2.7.14的版本。</p><p>​idea的快速生成项目模板的方法也差不多，左上角的File选择New Project，选择Spring Initializr，之后和官网的一样。</p><h3 id="创建完第一个springboot项目后，通过idea导入。"><a href="#创建完第一个springboot项目后，通过idea导入。" class="headerlink" title="创建完第一个springboot项目后，通过idea导入。"></a>创建完第一个springboot项目后，通过idea导入。</h3><p><img src="/images/springboot%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%952.png" alt="图片2"></p><p>​可以在src&#x2F;main&#x2F;java&#x2F;com.example.demo中看到一DemoApplication.java的类，这个类包含main方法，是程序的主入口，在src&#x2F;resources中有一个application.Properties的配置文件，还有一个pom.xml文件是maven的配置文件，用来增改项目需要的依赖。</p><p>​根据教程我在pom.xml文件中加入了springweb的依赖，在<Dependencies> </Dependencies>中添加了springweb依赖的代码。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​然后右键pom.xml文件，选择maven中的reimport，就自动下载了springweb的依赖。</p><h3 id="现在来编写一个REST的接口进行测试"><a href="#现在来编写一个REST的接口进行测试" class="headerlink" title="现在来编写一个REST的接口进行测试"></a>现在来编写一个REST的接口进行测试</h3><p>在src&#x2F;main&#x2F;java&#x2F;com.example.demo下新建一个hellocontroller的包，在这个包里创建一个HelloController的类。</p><p><img src="/images/springboot%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%953.png" alt="图片3"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.hellocontroller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RestController</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloController</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@GetMapping(&quot;/hello&quot;)</span></span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Hello Spring Boot!&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​创建完成后右键DemoApplication的这个类，选择“Run”，或是用快捷键Ctrl+Shift+F10让项目运行起来，在控制台中可以看到tomcat在8080端口启动了，打开浏览器，访问：<a href="http://localhost:8080/hello">http://localhost:8080/hello</a>，返回“Hello Spring Boot!”说明添加的REST接口已经测试通过了。</p><p><img src="/images/springboot%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%954.png" alt="图片4"></p><p>​第一个springboot项目到这里就完成了。</p><h2 id="接下来我来学习如何通过springboot来制作一个可以实现登录注册功能的网页程序。"><a href="#接下来我来学习如何通过springboot来制作一个可以实现登录注册功能的网页程序。" class="headerlink" title="接下来我来学习如何通过springboot来制作一个可以实现登录注册功能的网页程序。"></a>接下来我来学习如何通过springboot来制作一个可以实现登录注册功能的网页程序。</h2><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><p>​登录数据管理需要用到账号密码等这些数据，所以我们需要一个数据库来存放这些东西，win+r打开cmd 输入mysql -u root -p登录mysql 新建一个叫login的数据库，新建一张表，包含三个数据uid，uname，password，设置uid的类型为int(10)，umane和password的类型为varchar(30)，把uid设置为自增和主键。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span></span><br><span class="line">(</span><br><span class="line">    uid <span class="type">int</span>(<span class="number">10</span>) <span class="keyword">primary</span> key <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">    uname <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    password <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="keyword">UNIQUE</span> (uname)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>​创建完表之后我用了Navicat连接数据库进行了表的管理。</p><p><img src="/images/springboot%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%955.png" alt="图片5"></p><p>​可以看到数据库login中的user表已经创建好了，我在里面增加了几条数据，然后现在通过idea创建一个叫login的springboot的项目模板，创建的过程中勾选需要的依赖，Spring Web，MYSQL Driver，Spring Date JPA这三个依赖，创建完成后在application.properties写上连接数据库的配置。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//数据库连接的驱动</span></span><br><span class="line">spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver</span><br><span class="line"><span class="comment">//数据的url地址</span></span><br><span class="line">spring.datasource.url=jdbc:mysql:<span class="comment">//localhost:3306/login?serverTimezone=UTC</span></span><br><span class="line"><span class="comment">//MYSQL的用户</span></span><br><span class="line">spring.datasource.username=root</span><br><span class="line"><span class="comment">//MYSQL的密码</span></span><br><span class="line">spring.datasource.password=<span class="number">123456</span></span><br></pre></td></tr></table></figure><p>​spring.datasource.driver-class-name&#x3D;com.mysql.cj.jdbc.Driver这串代码可能会显示错误，为了解决这个问题我网上冲浪了一会儿，得到答案需要在pom.xml文件中的MYSQL Driver依赖中删除<runtime>就可以了，然后启动程序测试数据库是否连接成功，连接成功的话就不会报错了。</p><h3 id="创建包"><a href="#创建包" class="headerlink" title="创建包"></a>创建包</h3><p>​接下来了解一下SpringBoot的架构，可以对程序结构有更好的梳理，根据了解创建一下程序需要的所有的包。</p><p><img src="/images/springboot%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%957.png" alt="图片7"></p><p>​<strong>最终目录结构：repository  service  serviceImpl  controller  utils</strong></p><p><img src="/images/springboot%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%958.png" alt="图片8"></p><h3 id="开始编写程序的所需的类和接口"><a href="#开始编写程序的所需的类和接口" class="headerlink" title="开始编写程序的所需的类和接口"></a>开始编写程序的所需的类和接口</h3><h4 id="在domain中创建user实体类"><a href="#在domain中创建user实体类" class="headerlink" title="在domain中创建user实体类"></a>在domain中创建user实体类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.domain;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.*;</span><br><span class="line"><span class="meta">@Table(name = &quot;user&quot;)</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue(strategy = GenerationType.IDENTITY)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> uid;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String uname;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getUid</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> uid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUid</span><span class="params">(<span class="type">long</span> uid)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.uid = uid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUname</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> uname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUname</span><span class="params">(String uname)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.uname = uname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="在repository包中创建UserDao接口"><a href="#在repository包中创建UserDao接口" class="headerlink" title="在repository包中创建UserDao接口"></a>在repository包中创建UserDao接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.demo.domain.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDao</span> <span class="keyword">extends</span> <span class="title class_">JpaRepository</span>&lt;User, Long&gt; &#123;</span><br><span class="line">    User <span class="title function_">findByUname</span><span class="params">(String uname)</span>;</span><br><span class="line">    User <span class="title function_">findByUnameAndPassword</span><span class="params">(String uname, String password)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="在service包中创建UserService接口"><a href="#在service包中创建UserService接口" class="headerlink" title="在service包中创建UserService接口"></a>在service包中创建UserService接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.service;</span><br><span class="line"><span class="keyword">import</span> com.example.demo.domain.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    User <span class="title function_">loginService</span><span class="params">(String uname, String password)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    User <span class="title function_">registService</span><span class="params">(User user)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="在serviceImpl包中创建UserServiceImpl类"><a href="#在serviceImpl包中创建UserServiceImpl类" class="headerlink" title="在serviceImpl包中创建UserServiceImpl类"></a>在serviceImpl包中创建UserServiceImpl类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.serviceImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.demo.domain.User;</span><br><span class="line"><span class="keyword">import</span> com.example.demo.repository.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.example.demo.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">loginService</span><span class="params">(String uname, String password)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userDao.findByUnameAndPassword(uname, password);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(user != <span class="literal">null</span>)&#123;</span><br><span class="line">            user.setPassword(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">registService</span><span class="params">(User user)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(userDao.findByUname(user.getUname())!=<span class="literal">null</span>)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">            <span class="type">User</span> <span class="variable">newUser</span> <span class="operator">=</span> userDao.save(user);</span><br><span class="line">            <span class="keyword">if</span>(newUser != <span class="literal">null</span>)&#123;</span><br><span class="line">                newUser.setPassword(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> newUser;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="在utils包中创建Result类"><a href="#在utils包中创建Result类" class="headerlink" title="在utils包中创建Result类"></a>在utils包中创建Result类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Result</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> String code;</span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line">    <span class="keyword">private</span> T data;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCode</span><span class="params">(String code)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMsg</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMsg</span><span class="params">(String msg)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> T <span class="title function_">getData</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setData</span><span class="params">(T data)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Result</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Result</span><span class="params">(T data)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title function_">success</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Result</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Result</span>&lt;&gt;();</span><br><span class="line">        result.setCode(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">        result.setMsg(<span class="string">&quot;成功&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; Result&lt;T&gt; <span class="title function_">success</span><span class="params">(T data)</span> &#123;</span><br><span class="line">        Result&lt;T&gt; result = <span class="keyword">new</span> <span class="title class_">Result</span>&lt;&gt;(data);</span><br><span class="line">        result.setCode(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">        result.setMsg(<span class="string">&quot;成功&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; Result&lt;T&gt; <span class="title function_">success</span><span class="params">(T data,String msg)</span> &#123;</span><br><span class="line">        Result&lt;T&gt; result = <span class="keyword">new</span> <span class="title class_">Result</span>&lt;&gt;(data);</span><br><span class="line">        result.setCode(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">        result.setMsg(msg);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title function_">error</span><span class="params">(String code, String msg)</span> &#123;</span><br><span class="line">        <span class="type">Result</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Result</span>();</span><br><span class="line">        result.setCode(code);</span><br><span class="line">        result.setMsg(msg);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="在controller包中创建UserController类"><a href="#在controller包中创建UserController类" class="headerlink" title="在controller包中创建UserController类"></a>在controller包中创建UserController类</h4><p>​实现登录的控制和注册的控制</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.demo.domain.User;</span><br><span class="line"><span class="keyword">import</span> com.example.demo.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.example.demo.utils.Result;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result&lt;User&gt; <span class="title function_">loginController</span><span class="params">(<span class="meta">@RequestParam</span> String uname, <span class="meta">@RequestParam</span> String password)</span>&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.loginService(uname, password);</span><br><span class="line">        <span class="keyword">if</span>(user!=<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> Result.success(user,<span class="string">&quot;登录成功！&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="string">&quot;123&quot;</span>,<span class="string">&quot;账号或密码错误！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/register&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result&lt;User&gt; <span class="title function_">registController</span><span class="params">(<span class="meta">@RequestBody</span> User newUser)</span>&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.registService(newUser);</span><br><span class="line">        <span class="keyword">if</span>(user!=<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> Result.success(user,<span class="string">&quot;注册成功！&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="string">&quot;456&quot;</span>,<span class="string">&quot;用户名已存在！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ApiPost测试"><a href="#ApiPost测试" class="headerlink" title="ApiPost测试"></a>ApiPost测试</h3><p>​所有的类和接口都创建好了，现在启动DemoApplication来运行程序，使用Apipost来测试一下功能是否成功呢。</p><p><img src="/images/springboot%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%959.png" alt="图片9"></p><p>​选择请求方式为POST，输入地址为<a href="http://localhost:8080/user/register">http://localhost:8080/user/register</a> ，选择Body ，在raw中输入 </p><p><code>&#123;         &quot;uname&quot;:&quot;logintest&quot;,         &quot;password&quot;:123456 &#125;</code></p><p>​点击发送可以看到返回消息，说明registe功能已经成功了</p><p><img src="/images/springboot%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%9510.png" alt="图片10"></p><p>​至此整个项目就完成了，后续我可能还会为这个项目制作一个前端的页面</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;首先学习怎么在SpingBoot官网或idea中快速生成一个SpringBoot的项目模板，制作第一个SpringBoot项目。&quot;&gt;&lt;a href=&quot;#首先学习怎么在SpingBoot官网或idea中快速生成一个SpringBoot的项目模板，制作第一个Sprin</summary>
      
    
    
    
    <category term="SpringBoot" scheme="https://www.yyxblog.world/categories/SpringBoot/"/>
    
    
    <category term="SpringBoot" scheme="https://www.yyxblog.world/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>关于这个博客</title>
    <link href="https://www.yyxblog.world/2023/07/27/%E5%85%B3%E4%BA%8E%E8%BF%99%E4%B8%AA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://www.yyxblog.world/2023/07/27/%E5%85%B3%E4%BA%8E%E8%BF%99%E4%B8%AA%E5%8D%9A%E5%AE%A2/</id>
    <published>2023-07-27T14:10:34.000Z</published>
    <updated>2023-07-28T13:07:45.663Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一篇博客！"><a href="#第一篇博客！" class="headerlink" title="第一篇博客！"></a>第一篇博客！</h1><p>这是我的第一个博客，这个博客是用<a href="https://hexo.io/zh-cn/index.html">Hexo</a>框架和Hexo的<a href="https://butterfly.js.org/">Butterfly</a>主题搭建的，托管在我的<a href="https://github.com/XBluoB/XBluoB.github.io">github</a>上，因为是托管在gihub上的项目，所以国内打开可能会有点慢吧，所以我尝试用了CDN加速，个人感觉打开的速度快了，不知道我的CDN配置有没有生效，但是把打开网站的链接变成https了，不会显示此网站不安全啦！</p><h3 id="我的网名（称呼）"><a href="#我的网名（称呼）" class="headerlink" title="我的网名（称呼）"></a>我的网名（称呼）</h3><p>我给自己取的网名是菠萝菠萝，从高中开始就一直在使用这个网名了，个人觉得还挺好听的，自己的社交平台、网站、邮箱、游戏ID虽然说不全是菠萝菠萝，但是几乎都带菠萝或者Boluo吧，就是很喜欢这个名字。</p><h3 id="写博客使用的语言和软件"><a href="#写博客使用的语言和软件" class="headerlink" title="写博客使用的语言和软件"></a>写博客使用的语言和软件</h3><p>博客用的是<a href="https://www.markdownguide.org/">Markdown</a>语言写的，软件的话就用的是Typora这款软件，看网上的大佬用Typora写出来的博客都非常的好看，所以我决定要学习学习Markdown语言和Typora 的使用，争取可以写出更好看的博客。</p><h3 id="博客内容"><a href="#博客内容" class="headerlink" title="博客内容"></a>博客内容</h3><p>网上很多大佬写的博客都是一些技术博客，我自己都没整明白呢，所以我写的就是我的想法、我的心得、我的经验，我的观念，记录记录我做某事获得的感悟。</p><h3 id="后续目标"><a href="#后续目标" class="headerlink" title="后续目标"></a>后续目标</h3><p>完善一下博客的评论功能，虽然不知道会不会有人评论，但是哪天我的经验我的想法帮助到他人，他人想向我询问的时候发现不能评论那就不好啦！</p><h5 id="那么我的第一篇博客就说这么多了"><a href="#那么我的第一篇博客就说这么多了" class="headerlink" title="那么我的第一篇博客就说这么多了"></a>那么我的第一篇博客就说这么多了</h5>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;第一篇博客！&quot;&gt;&lt;a href=&quot;#第一篇博客！&quot; class=&quot;headerlink&quot; title=&quot;第一篇博客！&quot;&gt;&lt;/a&gt;第一篇博客！&lt;/h1&gt;&lt;p&gt;这是我的第一个博客，这个博客是用&lt;a href=&quot;https://hexo.io/zh-cn/index.h</summary>
      
    
    
    
    <category term="关于博客" scheme="https://www.yyxblog.world/categories/%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="博客介绍" scheme="https://www.yyxblog.world/tags/%E5%8D%9A%E5%AE%A2%E4%BB%8B%E7%BB%8D/"/>
    
  </entry>
  
</feed>
